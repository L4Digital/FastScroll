apply plugin: 'maven-publish'
apply plugin: 'signing'

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

task generateArchives(dependsOn: ['sourcesJar', 'javadocJar'])

artifacts {
    archives sourcesJar
    archives javadocJar
}

group = LIBRARY_GROUP
version = LIBRARY_VERSION

afterEvaluate {
    javadoc.classpath += files(android.libraryVariants.collect { variant ->
        variant.javaCompileProvider.get().classpath
    })

    publishing {
        publications {
            release(MavenPublication) {
                artifactId LIBRARY_ARTIFACT
                groupId LIBRARY_GROUP
                version LIBRARY_VERSION

                artifact javadocJar
                artifact sourcesJar
                artifact "$buildDir/outputs/aar/$artifactId-release.aar"

                pom {
                    name = LIBRARY_NAME
                    description = LIBRARY_DESCRIPTION
                    url = "https://$LIBRARY_PATH"
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'randr0id'
                            name = 'Randy Webster'
                            email = 'randy@randr0id.com'
                        }
                    }
                    scm {
                        connection = "scm:git:${LIBRARY_PATH}.git"
                        developerConnection = "scm:git:ssh://${LIBRARY_PATH}.git"
                        url = "https://$LIBRARY_PATH/tree/master"
                    }
                }
            }
        }
    }
}

ext["signing.keyId"] = rootProject.ext["signing.keyId"]
ext["signing.password"] = rootProject.ext["signing.password"]
ext["signing.secretKeyRingFile"] = rootProject.ext["signing.secretKeyFile"]

signing {
    sign publishing.publications
}
